[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
norecursedirs =
    data
    backups
    artifacts
    .venv

# Test execution options
addopts = 
    --strict-markers
    --verbose
    --tb=short
    --maxfail=10
    --durations=10
    # Coverage & reporting (aligns with audit rules: centralize artifacts under observability/)
    --cov=src
    --cov-report=html:observability/coverage/html
    --cov-report=xml:observability/coverage/coverage.xml
    --junitxml=observability/junit/junit.xml
    

# Test markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, with external dependencies)
    e2e: End-to-end tests (slowest, full system)
    slow: Slow running tests (> 5 seconds)
    security: Security-related tests
    performance: Performance and load tests
    contract: Contract tests (API, HMAC, JWT)
    smoke: Smoke tests for basic functionality
    regression: Regression tests for bug fixes
    asyncio: Async tests requiring an event loop
    
# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    
# Minimum version requirements
minversion = 7.0

# Asyncio configuration
# Configured in pyproject.toml

# Coverage configuration
[coverage:run]
source = .
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */.venv/*
    */migrations/*
    */alembic/*
    setup.py
    conftest.py

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Don't complain about abstract methods
    @(abc\.)?abstractmethod

# Reporting
precision = 1
show_missing = true
skip_covered = false
skip_empty = false

[coverage:html]
directory = observability/coverage/html
title = ORCH-Next Coverage Report

[coverage:xml]
output = observability/coverage/coverage.xml