{"source_path": "data\\validation\\sources\\search_corpus\\algorithms_python\\quantum\\quantum_random.py.DISABLED.txt", "category": "search", "text": "import doctest\n\nimport projectq\nfrom projectq.ops import H, Measure\n\n\ndef get_random_number(quantum_engine: projectq.cengines._main.MainEngine) -> int:\n    \"\"\"\n    >>> isinstance(get_random_number(projectq.MainEngine()), int)\n    True\n    \"\"\"\n    qubit = quantum_engine.allocate_qubit()\n    H | qubit\n    Measure | qubit\n    return int(qubit)\n\n\nif __name__ == \"__main__\":\n    doctest.testmod()\n\n    # initialises a new quantum backend\n    quantum_engine = projectq.MainEngine()\n\n    # Generate a list of 10 random numbers\n    random_numbers_list = [get_random_number(quantum_engine) for _ in range(10)]\n\n    # Flushes the quantum engine from memory\n    quantum_engine.flush()\n\n    print(\"Random numbers\", random_numbers_list)\n", "chars": 726}