{"source_path": "data\\validation\\sources\\search_corpus\\algorithms_python\\machine_learning\\random_forest_regressor.py.broken.txt", "category": "search", "text": "# Random Forest Regressor Example\nfrom sklearn.datasets import load_boston\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\nfrom sklearn.model_selection import train_test_split\n\n\ndef main():\n\n    \"\"\"\n    Random Forest Regressor Example using sklearn function.\n    Boston house price dataset is used to demonstrate the algorithm.\n    \"\"\"\n\n    # Load Boston house price dataset\n    boston = load_boston()\n    print(boston.keys())\n\n    # Split dataset into train and test data\n    x = boston[\"data\"]  # features\n    y = boston[\"target\"]\n    x_train, x_test, y_train, y_test = train_test_split(\n        x, y, test_size=0.3, random_state=1\n    )\n\n    # Random Forest Regressor\n    rand_for = RandomForestRegressor(random_state=42, n_estimators=300)\n    rand_for.fit(x_train, y_train)\n\n    # Predict target for test data\n    predictions = rand_for.predict(x_test)\n    predictions = predictions.reshape(len(predictions), 1)\n\n    # Error printing\n    print(f\"Mean Absolute Error:\\t {mean_absolute_error(y_test, predictions)}\")\n    print(f\"Mean Square Error  :\\t {mean_squared_error(y_test, predictions)}\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "chars": 1208}