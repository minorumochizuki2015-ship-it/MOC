# ÂÆâÂÖ®„Å™„É¢„Éá„É´ÁΩÆÊèõÔºà„Ç∑„É≥„Éú„É™„ÉÉ„ÇØ„É™„É≥„ÇØ + ÂéüÂ≠êÁΩÆÊèõÔºâ
param(
    [string]$NewModelPath = "",
    [switch]$DryRun = $false
)

$ErrorActionPreference = 'Stop'
Set-StrictMode -Version Latest

$currentLink = "models\current.gguf"
$modelsDir = "models"

Write-Host "üîÑ ÂÆâÂÖ®„Å™„É¢„Éá„É´ÁΩÆÊèõ (DryRun: $DryRun)" -ForegroundColor Cyan

if (-not $NewModelPath) {
    Write-Error "NewModelPath is required"
    exit 1
}

if (-not (Test-Path $NewModelPath)) {
    Write-Error "New model file not found: $NewModelPath"
    exit 1
}

# „Éè„ÉÉ„Ç∑„É•Âêç„Éá„Ç£„É¨„ÇØ„Éà„É™‰ΩúÊàê
$modelHash = (Get-FileHash $NewModelPath -Algorithm SHA256).Hash
$hashDir = Join-Path $modelsDir $modelHash
$hashModelPath = Join-Path $hashDir "model.gguf"

if ($DryRun) {
    Write-Host "DRY RUN: Would copy $NewModelPath to $hashModelPath" -ForegroundColor Yellow
    Write-Host "DRY RUN: Would create symlink $currentLink -> $hashModelPath" -ForegroundColor Yellow
    exit 0
}

# „Éè„ÉÉ„Ç∑„É•„Éá„Ç£„É¨„ÇØ„Éà„É™‰ΩúÊàê
New-Item -Force -ItemType Directory -Path $hashDir | Out-Null

# „É¢„Éá„É´„Éï„Ç°„Ç§„É´„Ç≥„Éî„Éº
Write-Host "Copying model to hash directory..." -ForegroundColor Yellow
Copy-Item $NewModelPath $hashModelPath -Force

# Êó¢Â≠ò„Ç∑„É≥„Éú„É™„ÉÉ„ÇØ„É™„É≥„ÇØÂâäÈô§
if (Test-Path $currentLink) {
    Remove-Item $currentLink -Force
}

# Êñ∞„Åó„ÅÑ„Ç∑„É≥„Éú„É™„ÉÉ„ÇØ„É™„É≥„ÇØ‰ΩúÊàê
Write-Host "Creating symlink..." -ForegroundColor Yellow
New-Item -ItemType SymbolicLink -Path $currentLink -Target $hashModelPath | Out-Null

# ÁΩÆÊèõÂæå„ÅÆËá™ÂãïË©ï‰æ°
Write-Host "Running post-swap evaluation..." -ForegroundColor Yellow
& .\scripts\ops\quick-health.ps1

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Model swap successful" -ForegroundColor Green
    Write-Host "Current model: $currentLink -> $hashModelPath" -ForegroundColor Cyan
} else {
    Write-Warning "‚ö†Ô∏è Post-swap evaluation failed, consider rollback"
    Write-Host "Rollback command: git checkout mini-eval-ok-20250920" -ForegroundColor Yellow
}

exit $LASTEXITCODE
